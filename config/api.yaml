# Copyright 2020 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/name: tekton-results-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tekton-results-api
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app.kubernetes.io/name: tekton-results-api
    spec:
      serviceAccountName: api
      containers:
        - name: api
          image: ko://github.com/tektoncd/results/cmd/api
          env:
            # See cmd/api/README.md for documentation of these vars.
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: tekton-results-postgres
                  key: POSTGRES_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tekton-results-postgres
                  key: POSTGRES_PASSWORD
            - name: DB_HOST
              value: tekton-results-postgres-service.tekton-pipelines.svc.cluster.local
            - name: DB_NAME
              value: tekton-results
          volumeMounts:
            - name: config
              mountPath: /home/nonroot/env
              readOnly: true
            - name: tls
              mountPath: "/etc/tls"
              readOnly: true
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
      volumes:
        - name: config
          configMap:
            name: tekton-results-api-config
        - name: tls
          secret:
            secretName: tekton-results-tls
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: tekton-pipelines
spec:
  selector:
    app.kubernetes.io/name: tekton-results-api
  ports:
    - name: grpc
      protocol: TCP
      port: 50051
      targetPort: 50051
    - name: rest
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: prometheus
      protocol: TCP
      port: 9090
      targetPort: 9090
