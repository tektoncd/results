# Copyright 2020 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: watcher
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/name: tekton-results-watcher
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tekton-results-watcher
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app.kubernetes.io/name: tekton-results-watcher
    spec:
      serviceAccountName: watcher
      containers:
        - name: watcher
          image: ko://github.com/tektoncd/results/cmd/watcher
          args:
            [
              "-api_addr",
              "tekton-results-api-service.tekton-pipelines.svc.cluster.local:50051",
              "-auth_mode",
              "token",
            ]
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: tekton-results-config-logging
            - name: CONFIG_LEADERELECTION_NAME
              value: tekton-results-config-leader-election
            - name: CONFIG_OBSERVABILITY_NAME
              value: tekton-results-config-observability
            - name: METRICS_DOMAIN
              value: tekton.dev/results
          ports:
            - name: metrics
              containerPort: 9090
            - name: profiling
              containerPort: 8008
          volumeMounts:
            - name: tls
              mountPath: "/etc/tls"
              readOnly: true
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
      volumes:
        - name: tls
          secret:
            secretName: tekton-results-tls
---
apiVersion: v1
kind: Service
metadata:
  name: watcher
  namespace: tekton-pipelines
spec:
  ports:
  - name: metrics
    port: 9090
  - name: profiling
    port: 8008
  selector:
    app.kubernetes.io/name: tekton-results-watcher
