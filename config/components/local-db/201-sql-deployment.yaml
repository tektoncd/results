# Copyright 2020 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/name: tekton-results-postgres
data:
  POSTGRES_DB: tekton-results
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/name: tekton-results-postgres
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tekton-results-postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tekton-results-postgres
    spec:
      containers:
      - name: postgres
        image: bitnami/postgresql@sha256:35c57c2abb3775004d4a247b1119b2e436b0ef620c9236c64aebce373b58ff9a # 13.12.0
        envFrom:
          - configMapRef:
              name: tekton-results-postgres
          - secretRef:
              name: tekton-results-postgres
        ports:
        - containerPort: 5432
          name: postgredb
        volumeMounts:
        - name: postgredb
          mountPath: /bitnami/postgresql
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
            add:
              - NET_BIND_SERVICE
  volumeClaimTemplates:
  - metadata:
      name: postgredb
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/name: tekton-results-postgres
spec:
  ports:
  - port: 5432
    name: postgres
  type: NodePort
  selector:
    app.kubernetes.io/name: tekton-results-postgres
